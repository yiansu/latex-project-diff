@inproceedings{noelle:cgo,
  author = {Matni, Angelo and Deiana, Enrico Armenio and Su, Yian and Gross, Lukas and Ghosh, Souradip and Apostolakis, Sotiris and Xu, Ziyang and Tan, Zujun and Chaturvedi, Ishita and Homerding, Brian and McMichen, Tommy and August, David I. and Campanoni, Simone},
  title = {NOELLE Offers Empowering LLVM Extensions},
  year = {2022},
  isbn = {9781665405843},
  publisher = {IEEE Press},
  url = {https://doi.org/10.1109/CGO53902.2022.9741276},
  doi = {10.1109/CGO53902.2022.9741276},
  abstract = {Modern and emerging architectures demand increasingly complex compiler analyses and transformations. As the emphasis on compiler infrastructure moves beyond support for peephole optimizations and the extraction of instruction-level parallelism, compilers should support custom tools designed to meet these demands with higher-level analysis-powered abstractions and functionalities of wider program scope. This paper introduces NOELLE, a robust open-source domain-independent compilation layer built upon LLVM providing this support. NOELLE extends abstractions and functionalities provided by LLVM enabling advanced, program-wide code analyses and transformations. This paper shows the power of NOELLE by presenting a diverse set of 11 custom tools built upon it.},
  booktitle = {Proceedings of the 20th IEEE/ACM International Symposium on Code Generation and Optimization},
  pages = {179â€“192},
  numpages = {14},
  location = {Virtual Event, Republic of Korea},
  series = {CGO '22}
}
